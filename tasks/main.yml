- name: Install role's required chocolatey packages
  win_chocolatey:
    name: "{{ item }}"
    state: present
  with_items: "{{ role_chocolatey_packages }}"

- name: Ensure the bamboo_agent_home {{ bamboo_agent_home }} exist
  win_file:
    path: "{{ bamboo_agent_home }}"
    state: directory

- name: Download the bamboo_agent_jarfile from bamboo_agent_jarfile_url {{ bamboo_agent_jarfile_url }}
  win_get_url:
    url: "{{ bamboo_agent_jarfile_url }}"
    dest: '{{ bamboo_agent_home }}\{{ bamboo_agent_jarfile_name }}'

- name: Detect if we already run the installer
  win_stat:
    path: '{{ bamboo_agent_home }}\bin\InstallBambooAgent-NT.bat'
  register: detect_installer_run

# Does it return to ansible?
- name: Deploy the custom setup ps1 script
  win_copy:
    dest: '{{ bamboo_agent_home }}\ansible-custom-setup.ps1'
    src: 'ansible-custom-setup.ps1'

# WARNING Brutal hack followed!
- name: Run the bamboo_remote_agent wrapper to install bamboo agent service
  win_command: '{{ bamboo_agent_launch_cmd }}'
  async: 180
  poll: 10
  when: not detect_installer_run.stat.exists
  ignore_errors: yes

- name: Deploy the bamboo custom capabilities files
  win_templates:
    src: bamboo-capabilities.properties.j2
    dest: '{{ bamboo_agent_home }}\bin\bamboo-capabilities.properties'

- name: create a user account that runs bamboo-agent (Andrew said it fixes the build from bamboo server job)
  win_user:
    name: '{{ bamboo_agent_user_name }}'
    groups:
      - Users
    password: '{{ bamboo_agent_user_password }}'
    state: present
  when: bamboo_agent_user_password

- name: Ensure that system32 and Powershell are present on the global system path, and in the specified order
  win_path:
    elements:
    - '%SystemRoot%'
    - '%SystemRoot%\system32'
    - '%SystemRoot%\system32\WindowsPowerShell\v1.0'

- name: Allow user {{ bamboo_agent_user_name }} to have full right under {{ bamboo_agent_home }}
  win_acl:
    user: {{ bamboo_agent_user_name }}
    path: '{{ bamboo_agent_home }}'
    rights: FullControl
    type: allow
    state: present
    inherit: ContainerInherit, ObjectInherit
    propagation: 'None'

- name: Check if service bamboo-remote-agent is installed
  win_service:
    name: bamboo-remote-agent
  register: service_info

- name: Install the agent wrapper service
  win_command: '{{ bamboo_agent_home }}\bin\InstallBambooAgent-NT.bat'
  when: not service_info.exists

- name: Start the bamboo-remote-agent service if not started yet
  win_service:
    name: bamboo-remote-agent
    start_mode: auto
    state: started
    username: '{{ bamboo_agent_user_name }}'
    password: '{{ bamboo_agent_user_password }}'
